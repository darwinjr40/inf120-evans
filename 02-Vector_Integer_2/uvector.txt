unit uvector;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils,Dialogs;
   const
     MAX_ELE=1024;
     type

       { vector }

       vector=class
         private
           elem:array[1..MAX_ELE]of integer;
           dim:integer;
             public
               constructor crear();
               procedure setDim(n:integer);
               function getDim():integer;
               procedure addElem(ele:integer);
               function getElem(pos:integer):integer;
               procedure insElem(pos,ele:integer);
               procedure RemElem(pos:integer);
               procedure InteElem(pos1,pos2:integer);
               procedure invertir();
               procedure rotaVector();

               function busq_sec(ele:integer):integer;
               function busq_bi(ele:integer):integer;
               procedure ord_inter();
               procedure ord_selec();
               procedure ord_burbu();
end;

implementation

{ vector }

constructor vector.crear();
var i:integer;
begin
 dim:=0;
 for i:=1 to MAX_ELE do;
 elem[i]:=0;
end;

procedure vector.setDim(n: integer);
begin
  dim:=n;
end;

function vector.getDim(): integer;
begin
  result:=dim;
end;

procedure vector.addElem(ele: integer);
begin
 if(dim < MAX_ELE)then
   begin
     dim:=dim+1;
     elem[dim]:=ele;
   end
   else
   ShowMessage('Almacenamiento lleno...');
end;

function vector.getElem(pos: integer): integer;
begin
    result:=elem[pos];
end;

procedure vector.insElem(pos, ele: integer);
var i:integer;
begin
    i:=1;
    if(pos >0)and (pos<=dim)then
    begin
        for i:=dim to pos do
        begin
          elem[i+1]:=elem[i];
          elem[pos]:=ele;
          dim:=dim+1;
        end;
        end
        else
        begin
        ShowMessage('Fuera de rango...');

    end;
end;


procedure vector.RemElem(pos: integer);
var i:integer;
begin
 i:=1;
    if(pos <>0)and (pos>=dim)then
    begin
      while (i=pos)and(i=dim-1) do
        begin
          elem[i]:=elem[i+1];
        end;
      dim:=dim-1;

     end
    else
    begin
        ShowMessage('Fuera de rango...');
    end;

end;

procedure vector.InteElem(pos1, pos2: integer);
var aux:integer;
begin
 aux:=0;
    if (pos1>0) and (pos1<=dim) and (pos2>0) and (pos2<=dim)then
    begin
        aux:=elem[pos1];
        elem[pos1]:=elem[pos2];
        elem[pos2]:=aux;
    end
    else
     begin
    ShowMessage('Fuera de rango..');
     end;
end;

procedure vector.invertir();
var i,n,aux:integer;
begin
 n:=MAX_ELE;
 i:=1;
  for i:=1 to dim div 2 do
  begin
    aux:=elem[dim-i+1];
    elem[dim-i+1]:=elem[i];
    elem[i]:=aux;
  end;
end;

procedure vector.rotaVector();
  begin

end;

function vector.busq_sec(ele: integer): integer;
var
sw:boolean;
i:integer;
begin
  sw:=false ;
  i:=1;
  if(i<= dim )and( not sw)then
  begin
  if ( ele=elem[i])then
begin
 sw:=true;
end
  else
  begin
   i:=i+1;
  end;

  end;
  if(sw= true)then
  begin
   result:=i;
  end
  else
  begin
   result:=-1;
end;
end;

function vector.busq_bi(ele: integer): integer;
var
ini,fim,m:integer;
begin
  ini:=1;
  fim:= dim;
  while(ini<fim)do
  begin
  m:=(fim +ini) div 2;
    if(ele= elem[m])then
    begin
     result:= m;
    end
    else
    if(ele<elem[m])then
    begin
     fim:= m-1;
    end
    else
    begin
     ini:= m+1;
    end;
    result:= -1;
  end;
end;


procedure vector.ord_inter();
var p1,d:integer;
begin
  for p1:=1 to dim-1 do
  begin
    for d:=p1+1 to dim do
    begin
      if( elem[d] < elem[p1])then
      begin
      InteElem(d,p1);
      end;

    end;

  end;
end;

procedure vector.ord_selec();
var s,p1,d:integer;
begin
  for p1:=1 to dim-1 do
  begin
    s:=p1;
  end;
  for d:= s+1 to dim do
  begin
    if(elem[d] < elem[s]) then
    begin
    s:= d;
    end;

  end;
if (s<> p1)then
begin
  InteElem(s,p1);
end;
end;

procedure vector.ord_burbu();
var p1,d:integer;
begin
for p1:= dim to 2  do
begin
  for d:= 1 to p1-1  do
begin
  if( elem[d]< elem[d+1])then
  begin
    InteElem(d,d+1);
  end;
end;
end;
end;

end.